{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// 消息订阅与发布\r\n\r\ninterface EventOptions {\r\n    on:(name:string,cb:Function)=>void\r\n    emit:(name:string,...arg:Array<any>)=>void\r\n    off:(name:string,fn:Function)=>void\r\n    once:(name:string,fn:Function)=>void\r\n}\r\n// 订阅事件列表\r\ninterface EventList {\r\n    // key事件名 Array:事件订阅函数数组\r\n    [key:string]:Array<Function>\r\n}\r\n\r\nclass Dispatch implements EventOptions {\r\n    list:EventList\r\n    constructor(){\r\n        this.list = {}\r\n    }\r\n    on(name:string,cb:Function){\r\n        const eventLi = this.list[name] || []\r\n        eventLi.push(cb)\r\n        this.list[name] = eventLi\r\n    }\r\n    emit(name:string,...arg:Array<any>){\r\n        const eventLi = this.list[name]\r\n        if(eventLi){\r\n            eventLi.forEach(fn=>{\r\n                fn.apply(this,arg)\r\n            })\r\n        } else {\r\n            console.error(`${name}未知事件`)\r\n        }\r\n    }\r\n    // 删除事件\r\n    off(name:string,fn:Function){\r\n        const eventLi = this.list[name]\r\n        let ind;\r\n        if(eventLi && fn){\r\n            eventLi.forEach((fni,index)=>{\r\n                if(fni === fn){\r\n                    ind = index\r\n                }\r\n            })\r\n            eventLi.splice(ind,1);\r\n        } else {\r\n            console.error(`${name}未知事件`);\r\n        }\r\n        this.list[name] = eventLi\r\n    }\r\n    // 只执行一次\r\n    once(name:string,fn:Function){\r\n        const fns = (...arg:Array<any>) => {\r\n            fn.apply(this,arg)\r\n            this.off(name,fns)\r\n        }\r\n        this.on(name,fns)\r\n    }\r\n}\r\n\r\n// PubSub类比\r\n\r\n// PubSub.subscribe('订阅消息名',(a, 传递来的参数 )=>{\r\n    //回调\r\n//})\r\n\r\n\r\n/**\r\n * PubSub.publish('订阅消息名', ...携带参数 )\r\n * \r\n * \r\n * \r\n */\r\n\r\n\r\nconst test = new Dispatch()\r\n\r\ntest.on('post',(...arg:Array<any>)=>{\r\n    console.log(arg,1);\r\n})\r\nconst fn = (...arg:Array<any>)=>{\r\n    console.log(arg,2);\r\n    \r\n}\r\n\r\ntest.on('post',fn)\r\n\r\ntest.off('post',fn)\r\n\r\ntest.once('post',(...arg:Array<any>)=>{\r\n    console.log(arg,3);\r\n})\r\n\r\ntest.emit('post',1,false,'111')\r\ntest.emit('post',1,false,'111')\r\n\r\n\r\n\r\n"],"names":["test","constructor","this","list","on","name","cb","eventLi","push","emit","arg","forEach","fn","apply","console","error","off","ind","fni","index","splice","once","fns","log"],"mappings":"+QA2EA,MAAMA,EAAO,IA7Db,MAEIC,cACIC,KAAKC,KAAO,EACf,CACDC,GAAGC,EAAYC,GACX,MAAMC,EAAUL,KAAKC,KAAKE,IAAS,GACnCE,EAAQC,KAAKF,GACbJ,KAAKC,KAAKE,GAAQE,CACrB,CACDE,KAAKJ,KAAeK,GAChB,MAAMH,EAAUL,KAAKC,KAAKE,GACvBE,EACCA,EAAQI,SAAQC,IACZA,EAAGC,MAAMX,KAAKQ,EAAI,IAGtBI,QAAQC,MAAM,GAAGV,QAExB,CAEDW,IAAIX,EAAYO,GACZ,MAAML,EAAUL,KAAKC,KAAKE,GAC1B,IAAIY,EACDV,GAAWK,GACVL,EAAQI,SAAQ,CAACO,EAAIC,KACdD,IAAQN,IACPK,EAAME,EACT,IAELZ,EAAQa,OAAOH,EAAI,IAEnBH,QAAQC,MAAM,GAAGV,SAErBH,KAAKC,KAAKE,GAAQE,CACrB,CAEDc,KAAKhB,EAAYO,GACb,MAAMU,EAAM,IAAIZ,KACZE,EAAGC,MAAMX,KAAKQ,GACdR,KAAKc,IAAIX,EAAKiB,EAAI,EAEtBpB,KAAKE,GAAGC,EAAKiB,EAChB,GAoBLtB,EAAKI,GAAG,QAAO,IAAIM,KACfI,QAAQS,IAAIb,EAAI,EAAE,IAEtB,MAAME,EAAK,IAAIF,KACXI,QAAQS,IAAIb,EAAI,EAAE,EAItBV,EAAKI,GAAG,OAAOQ,GAEfZ,EAAKgB,IAAI,OAAOJ,GAEhBZ,EAAKqB,KAAK,QAAO,IAAIX,KACjBI,QAAQS,IAAIb,EAAI,EAAE,IAGtBV,EAAKS,KAAK,OAAO,GAAE,EAAM,OACzBT,EAAKS,KAAK,OAAO,GAAE,EAAM"}